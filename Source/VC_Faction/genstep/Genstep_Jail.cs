using RimWorld.BaseGen;
using System;
using System.Collections.Generic;
using System.Linq;
using RimWorld;
using Verse;

namespace VC_Faction
{
    public class GenStep_Jail : GenStep_Scatterer
    {
        private bool clearBuildingFaction;
        private static List<IntVec3> tmpCandidates = new List<IntVec3>();

        public override int SeedPart => 1806208471;
        protected override bool CanScatterAt(IntVec3 c, Map map)
        {
            return new CellRect(c.x - 43 / 2, c.z - 51 / 2, 43, 51).FullyContainedWithin(new CellRect(0, 0, map.Size.x, map.Size.z));
}
        protected override void ScatterAt(IntVec3 c, Map map, GenStepParams parms, int stackCount = 1)
        {
             CellRect rect = new CellRect(c.x - 43 / 2, c.z - 51 / 2, 43, 51);
            foreach (IntVec3 cell in rect)
                                 {
                                    List<Thing> things = cell.GetThingList(map);
                                    for (int i = things.Count - 1; i >= 0; i--)
                                    {
                                        things[i].Destroy();
                                    }
                                    Building building = cell.GetFirstBuilding(map);
                                    if (building != null)
                                        building.Destroy();
                                    // 清除屋顶
                                    if (cell.Roofed(map))
                                        map.roofGrid.SetRoof(cell, null);
                                 }

                        map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+0,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+1,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+2,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+3,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+4,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+5,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+6,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+7,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+8,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+9,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+10,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+11,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+12,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+13,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+14,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+15,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+16,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+17,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+18,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+19,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+20,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+21,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+22,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+23,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+24,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+25,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+26,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+27,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+28,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+29,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+30,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+31,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+32,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+33,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+34,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+35,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+36,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+37,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+38,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodPlankFloor"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SterileTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+39,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+40,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "MetalTile"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Concrete"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "TileSlate"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+41,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+0), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sand"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+1), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+2), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+3), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+4), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+5), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+6), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+7), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+8), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+9), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+10), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+11), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+12), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+13), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+14), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+15), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+16), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+17), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+18), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+19), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+20), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+21), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "SoilRich"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+22), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+23), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+24), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+25), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+26), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+27), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+28), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+29), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+30), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+31), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+32), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+33), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+34), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+35), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+36), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+37), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+38), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+39), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Soil"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+40), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+41), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+42), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Gravel"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+43), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+44), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_Rough"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+45), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+46), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+47), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+48), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+49), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            map.terrainGrid.SetTerrain(new IntVec3(rect.minX+42,0,rect.minZ+50), DefDatabase<TerrainDef>.AllDefs.FirstOrDefault(d => d.defName == "Sandstone_RoughHewn"));
            Thing thing = null;
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+31),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+49),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+49),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+0,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+1,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+14),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+31),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+2,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+15),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+16),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+12),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+16),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+16),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+22),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+22),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+28),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+28),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+3,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+15),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+16),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+4,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Lectern"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+5,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+15),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+16),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+34),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "EndTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+7),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+12),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+16),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+16),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+22),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+22),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+28),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+28),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+6,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+7,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+15),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+16),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+22),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+25),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+27),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+28),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+37),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+37),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+8,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "DiningChair"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+7),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+12),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+15),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+15),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+17),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+18),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+19),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+19),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+21),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+21),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "TubeTelevision"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+23),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+24),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+9,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+10,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+11,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+12,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+12),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+13,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+12),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ElectricStove"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+14,0,rect.minZ+9),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+15,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+15),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+16,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+10),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+13),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+14),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+17,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+8),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+18,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+10),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Cooler"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+6),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+19,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+10),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+20,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+7),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+7),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+9),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+9),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+21,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+22,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+23,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+24,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+25,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+26,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+27,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+28,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+29,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+17),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+30,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+17),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+19),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+23),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Table1x2c"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+45),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+31,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Stool"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+36),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+32,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+35),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+36),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+37),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+38),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+39),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+40),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+41),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+42),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+43),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+44),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+45),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+46),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+33,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Dresser"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Dresser"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+39),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+41),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Shelf"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+43),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+34,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+19),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+35,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+7),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+9),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+34),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+7),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+36,0,rect.minZ+9),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ToolCabinet"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "ToolCabinet"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+19),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+21),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "BilliardsTable"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+37,0,rect.minZ+26),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+34),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+37),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+39),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+43),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+38,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+7),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+9),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+37),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+39),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+41),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Bed"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+43),map,new Rot4(3), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+7),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Sarcophagus"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+39,0,rect.minZ+9),map,new Rot4(1), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Door"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Steel"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "FloodLight"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+40,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WallLamp"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "WoodLog"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+41,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+1),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Grave"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+4),map,new Rot4(2), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+6),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+7),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+8),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+9),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+10),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+11),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+12),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+13),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+14),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+15),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+16),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+17),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+18),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+19),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+20),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+21),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+22),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+23),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+24),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+25),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+26),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+27),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+28),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+29),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+30),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+31),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+32),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+33),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+34),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+35),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+36),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+37),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+38),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+39),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+40),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+41),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+42),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+43),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+44),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+45),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+46),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+47),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+48),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+49),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+49),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Wall"), DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "Uranium"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
            thing = ThingMaker.MakeThing(DefDatabase<ThingDef>.AllDefs.FirstOrDefault(d => d.defName == "HiddenConduit"));
            GenSpawn.Spawn(thing, new IntVec3(rect.minX+42,0,rect.minZ+50),map,new Rot4(0), WipeMode.Vanish);
        }
    }
}